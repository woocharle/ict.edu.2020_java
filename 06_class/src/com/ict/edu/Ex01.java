package com.ict.edu;

public class Ex01 {
	//getter(): 호출하는 입장에서 메소드를 이용해서 변수값을 추출할 때
	//setter(): 호출하는 입장에서 메소드를 이용해서 변수값을 변경할 때 
	
	/*
	   2. 멤버필드(변수와 상수) 
	 
	 * 멤버메소드와 멤버 필드에 공통으로 해당 되는 사항
	   1) instrance(인스턴스): 객체 생성
	     - 인스턴스 필드, 인스턴스 메소드 => 객체가 생성될 때 같이 생성되는 필드와 메소드
	     - 일반적인 클래스가 멤버메소드나 멤버 필드는 모두 인스턴스이다.
	     - 호출방법: 객체참조변수.멤버필드, 객체참조변수.멤버메소드
	     - heap 메모리에 만들어진다.
	     
	   2) static
	     - 객체 생성과 상관없이 미리 만들어진 멤버필드와 멤버 메소드
	     - static는 반드시 메소드나 필드에 static 이라고 표시를 해야 한다.
	     - 언제든지 호출해서 사용 가능.
	     - static 메모리에서 만들어진다.
	     - 호출방법: 클래스이름.멤버필드, 클래스이름.멤버메소드
	     - 대표적인 예): System.out.println(), main메소드()
		
		5. 생성자: 클래스를 객체로 만들 때 한번 호출된다.
		  1) 목적:  멤버필드(변수와 상수)의 초기값을 지정한다.
		  2) 형식: - 클래스 이름과 생성자는 같다.
		           - 반환형 없는 메소드와 같다.
		  3) 클래스를 객체로 만드는 방법
		  	예) : Scanner       sc = new   Scanner(System.in);
				  클래스  참조변수   new   생성자
				  
		  4) 모든 클래스는 반드시 생성자를 가지며, 생성자가 없는 클래스는 기본 생성자가 생략되어있음.
		  5) 멤버필드와 멤버메소드를 사용하기 위한 접근법
		     객체참조변수.멤버필드, 객체참조변수, 멤버메소드
		     예) sc.next(), sc.nextInt();
		  6) 생성자도 오버로딩이 가능.
		  
		  
	 */
}
